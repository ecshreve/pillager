version: '3'

tasks:
  default:
    cmds:
      - task -l

  mod:
    desc: download and tidy go modules
    cmds:
      - go mod download
      - go mod tidy
  
  clean:
    desc: remove executables, temporary, and cached files
    ignore_error: true
    cmds:
      - rm bin/pillager
      - go clean -cache
      - rm -rf pkg/hunter/testdata
      - mkdir pkg/hunter/testdata

  lint:
    desc: runs golint
    cmds:
      - golint ./...

  test:
    desc: run all tests
    cmds:
      - go test ./...

  testv:
    desc: run all tests verbose
    cmds:
      - go test -v ./...

  testc:
    desc: run all tests and generate coverage
    cmds:
      - go test -covermode=set -coverprofile=coverage.out ./...
    sources:
      - ./**/*.go
    generates:
      - coverage.out
    method: checksum

  testc-view:
    desc: view test coverage report
    cmds:
      - task: testc
      - go tool cover -html=coverage.out

  build: 
    desc: run go build
    cmds:
      - go build -v -o bin/pillager .
    sources:
      - ./**/*.go
    generates:
      - bin/pillager
    method: checksum

  install:
    desc: install executable    
    cmds:
      - go install github.com/brittonhayes/pillager

  run:
    desc: run the executable
    cmds:
      - task: build
      - bin/pillager

  gen-docs:
    desc: generate documentation via gomarkdocwn
    cmds:
      - go generate

  polish:
    desc: clean build and generate everything
    cmds:
      - task: clean
      - task: mod
      - task: build
      - task: gen-docs

  dev-setup:
    desc: set things up for local development
    cmds:
      - task: mod
      - task: build

  local-godoc:
    desc: serve godoc server locally
    cmds:
      - echo "documentation is available at  http://localhost:6060/pkg/github.com/brittonhayes/pillager/"
      - godoc -http=:6060 
      
 